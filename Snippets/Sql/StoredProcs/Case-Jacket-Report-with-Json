USE [CaseJacketSolution]
GO
/****** Object:  StoredProcedure [dbo].[NotificationReportBuilder]    Script Date: 6/14/2017 8:16:16 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[NotificationReportBuilder]
@inputClientId int = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    -- Insert statements for procedure here


create table #t (
clientId INT,
clientName NVARCHAR(200),
 caseId int,
 caseName NVARCHAR(MAX),
 modified DATETIME,
 status NVARCHAR(200),
 jsonUpload NVARCHAR(200),
 jsonDoc NVARCHAR(MAX),
 jsonActivity NVARCHAR(MAX),
 jsonPerson NVARCHAR(MAX),
 )
 

   insert #t
	SELECT 
	c.clientId,
	m.clientName,
	c.caseID, 
	c.caseName,
	c.caseModDate, 
	-- c.caseStatusID,
	s.caseStatusText,
	NULL, -- jsonUpload
	NULL, -- jsonDoc
	NULL, -- jsonActivity
	NULL --jsonPerson
	FROM dbo.Cases AS c
	JOIN dbo.CaseStatus AS s ON s.caseStatusID = c.caseStatusID
	JOIN dbo.Client AS m ON	m.clientID = c.clientId
	-- Check if we have param clientId > then filter on clientId
	WHERE ((@inputClientId IS NULL OR @inputClientId = 0) OR c.clientId =  @inputClientId)


declare @caseId int

DECLARE curr CURSOR
   FOR select distinct #t.caseId from #t
OPEN curr
FETCH NEXT FROM curr into @caseId
 WHILE @@FETCH_STATUS = 0
   BEGIN

	-----------------------------------------------
	-----------------------------------------------

   	   Declare @jsonUpload varchar(max)
		 SELECT @jsonUpload = '[' +  STUFF(
		(SELECT TOP 5 
		'{'
		+ '"caseDocOriginalName":' + '"' + CAST(fileOriginalName AS VARCHAR(200)) + '"'
		+ ',"caseDocCreatedDate":' + '"' + CAST(fileCreatedDate AS VARCHAR(200)) + '"'
		+ '}'
		FROM dbo.Uploads 
		WHERE caseID = @caseId
		ORDER BY fileCreatedDate DESC
		FOR XML PATH(''),TYPE).value('.','NVARCHAR(MAX)'),1,1,''
	) + ']'
	
	-----------------------------------------------
	-----------------------------------------------

   Declare @jsonDoc varchar(max)
   SELECT @jsonDoc = '[' +  STUFF(
		(SELECT TOP 5 
		'{'
		+ '"caseDocOriginalName":' + '"' + CAST(caseDocOriginalName AS VARCHAR(200)) + '"'
		+ ',"caseDocCreatedDate":' + '"' + CAST(caseDocCreatedDate AS VARCHAR(200)) + '"'
		+ '}'
		FROM dbo.CaseDocuments 
		WHERE caseID = @caseId
		ORDER BY caseDocCreatedDate DESC
		FOR XML PATH(''),TYPE).value('.','NVARCHAR(MAX)'),1,1,''
	) + ']'
	
	-----------------------------------------------
	-----------------------------------------------

		   Declare @jsonActivity varchar(max)
		SELECT @jsonActivity = '[' +  STUFF(
		(SELECT TOP 5 ',{'
		+ '"caseActivityModDate":' + '"' + CAST(caseActivityModDate AS VARCHAR(30)) + '"'
		+ ',"caseActivityHours":' + '"' + CAST(caseActivityHours AS VARCHAR(30)) + '"'
		+ ',"memID":' + '"' + CAST(memID AS VARCHAR(30)) + '"'
		+ '}'
		FROM dbo.CaseActivity
		WHERE caseID = @caseId
		ORDER BY caseActivityModDate DESC
		FOR XML PATH(''),TYPE).value('.','NVARCHAR(MAX)'),1,1,''
	) + ']'

	
	-----------------------------------------------
	-----------------------------------------------
	
			   Declare @jsonPerson varchar(max)
		SELECT @jsonPerson = '[' +  STUFF(
		(SELECT TOP 5 ',{'
		+ '"personDateMod":' + '"' + CAST(personDateMod AS VARCHAR(30)) + '"'
		+ ',"personLastName":' + '"' + CAST(personLastName AS VARCHAR(30)) + '"'
		+ ',"personFirstName":' + '"' + CAST(personFirstName AS VARCHAR(30)) + '"'
		+ '}'
		FROM dbo.CasePerson
		WHERE caseID = @caseId
		ORDER BY personDateMod DESC
		FOR XML PATH(''),TYPE).value('.','NVARCHAR(MAX)'),1,1,''
	) + ']'

	
	-----------------------------------------------
	-----------------------------------------------

	UPDATE #t 
	SET 
	jsonUpload = @jsonUpload,
	jsonDoc = @jsonDoc,
	jsonActivity = @jsonActivity,
	jsonPerson = @jsonPerson
	WHERE #t.caseId = @caseId

	-----------------------------------------------
	-----------------------------------------------


  -- print @caseId

  FETCH NEXT FROM curr into @caseId
   end
CLOSE curr   
DEALLOCATE curr   


	select * from #t AS t
	ORDER BY t.modified DESC


	drop table #t

END

