https://exceptionnotfound.net/entity-change-tracking-using-dbcontext-in-entity-framework-6/

using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Linq;
using System.Web;

namespace LandcoApp_MVC.Models
{
	public partial class CoEntities : DbContext
	{
		public override int SaveChanges()
		{

			List<Models.CellHistory> logs = new List<CellHistory>();

			var modifiedEntities = ChangeTracker.Entries().ToList();
			
			foreach (var change in modifiedEntities)
			{
				var primaryKey = GetPrimaryKeyValue(change);
				var tableName = GetTableName(change);
				
				foreach (var prop in change.OriginalValues.PropertyNames)
				{
					var fieldName = prop;
					var originalValue = change.OriginalValues[prop].ToString();
					var currentValue = change.CurrentValues[prop].ToString();
					
					//Only create a log if the value changes
					if (originalValue != currentValue) 
					{
						Models.CellHistory log = new Models.CellHistory()
						{
							CellName = fieldName,
							TableName = tableName,
							OldValue = originalValue,
							NewValue = currentValue,
							ReferenceID = primaryKey,
							StaffID = "teststaffId",
							Timestamp = DateTime.Now
						};

						logs.Add(log);
						CellHistories.Add(log);
					}
				}
			}

			var l = logs;

			return base.SaveChanges();
		}

		long GetPrimaryKeyValue(DbEntityEntry entry)
		{
			var objectStateEntry = ((IObjectContextAdapter)this).ObjectContext.ObjectStateManager.GetObjectStateEntry(entry.Entity);
			return objectStateEntry.EntityKey.EntityKeyValues[0].Value.ToLongOrDefault();
		}

		string GetTableName(DbEntityEntry entry)
		{
			var objectStateEntry = ((IObjectContextAdapter)this).ObjectContext.ObjectStateManager.GetObjectStateEntry(entry.Entity);
			return objectStateEntry.EntityKey.EntitySetName.ToStringOrDefault().Trim();
		}

	}
}
